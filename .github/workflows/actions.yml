# This is a basic workflow to help you get started with Actions

name: Build Hugo site and deploy to S3

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
      runs-on: ubuntu-latest
      concurrency:
        group: ${{ github.workflow }}-${{ github.ref }}
      env:
        HUGO_VERSION: 0.115.1
      steps:
        - name: Install Hugo CLI
          run: |
            wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
            && sudo dpkg -i ${{ runner.temp }}/hugo.deb
        
        - name: Install Dart Sass
          run: sudo snap install dart-sass

        - uses: actions/checkout@v3
          with:
            submodules: true  # Fetch Hugo themes (true OR recursive)
            fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

        - name: Setup Hugo
          uses: peaceiris/actions-hugo@v2
          with:
            hugo-version: '0.110.0'
            extended: true

        - name: Setup Pages
          id: pages
          uses: actions/configure-pages@v3
            
        - name: Install Node.js dependencies
          run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

        - name: Build with Hugo
          env:
            # For maximum backward compatibility with Hugo modules
            HUGO_ENVIRONMENT: production
            HUGO_ENV: production
          run: |
            cd aigo && hugo \
              --gc \
              --minify \
              --baseURL "${{ steps.pages.outputs.base_url }}/" 

        - name: Fix permissions
          run: |
            chmod -v -R +rX "public/" | while read line; do
              echo "::warning title=Invalid file permissions automatically fixed::$line"
            done
        - name: Upload artifact
          uses: actions/upload-pages-artifact@v2
          with:
            path: .

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2